{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fdb01900d19e6b5a",
   "metadata": {},
   "source": [
    "## BME i9400\n",
    "## Fall 2024\n",
    "### Homework 1: The Monty Hall Problem"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c7a55b2",
   "metadata": {},
   "source": [
    "# Sandibell Vega"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50c3b8c2de5fca28",
   "metadata": {},
   "source": [
    "** Due date: Monday, September 30, 2024, 11:59:59.999 PM EST **"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "530e3b122b4bf35c",
   "metadata": {},
   "source": [
    "You are a contestant on a game show hosted by Monty Hall. In the game show, there are 3 doors. Behind one of the doors is a Tesla Cybertruck. Behind the other two is a goat (i.e., opening each of the other two doors reveals a goat). The object of the game is to successfully choose the door holding the Tesla Cybertruck -- regardless of how much you may love goats or dislike Tesla Cybertrucks. \n",
    " \n",
    "Now imagine that you randomly choose one of the doors. Mr. Hall then shows you one of the other two doors, revealing a goat. He then offers you the chance to switch your initial guess.\n",
    " \n",
    "The objective of this assignment is to determine whether you should switch your guess.\n",
    " \n",
    "### Part 1. Analytical Solution \t\n",
    "By using the laws of probability and following the rules of the game, derive the following probabilities:\n",
    "\n",
    "a. \tP(win a Cybertruck | switch your guess)\n",
    "\n",
    "b. \tP(win a Cybertruck | do not switch your guess)\n",
    " \n",
    "Based on your answers, should you switch your guess?\n",
    "\n",
    "** ENTER YOUR ANSWER HERE IN MARKDOWN, IDEALLY USING LATEX NOTATION WHICH IS SUPPORTED BY JUPYTER NOTEBOOKS. **"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1793884f",
   "metadata": {},
   "source": [
    "1a. \tP(win a Cybertruck | switch your guess)\n",
    "\n",
    "- The probability of winning will be denoted if you decide to switch your guess. $\\frac{1}{3}$.\n",
    "  - The probability that you initially pick the door with the Cybertruck is:\n",
    "     # ùëÉ(Cybertruck)= $\\frac{1}{3}$.\n",
    "\n",
    "- The probability that you initially pick the Cybertruck is $\\frac{2}{3}$.\n",
    "  - The probability that you initially pick a door with a goat is:\n",
    "     # ùëÉ(Goat) = $\\frac{2}{3}$.\n",
    "\n",
    "The outcome is a loss if you choose the door with the Cybertruck at first and then decide to switch. Nevertheless, if you opt for a door that contains a goat initially and then decide to switch, you will emerge victorious, as Monty will expose the other goat.\n",
    "  # P(win¬†Cybertruck ‚à£ switch)=P(Goat)= $\\frac{2}{3}$.\n",
    "\n",
    "1b. \tP(win a Cybertruck | do not switch your guess)\n",
    "- ‚ÄãAmong the three doors, one has a Cybertruck while the other two have goats.\n",
    "Probability of choosing the door with the Cybertruck:\n",
    "\n",
    "# P(win¬†Cybertruck ‚à£ do¬†not¬†switch) = P(initially¬†picked¬†Cybertruck)\n",
    "\n",
    "\n",
    "# ùëÉ(initially¬†picked¬†Cybertruck) = $\\frac{1}{3}$\n",
    "\n",
    "\n",
    "# Result: P(win Cyber truck | do not switch) = $\\frac{1}{3}$\n",
    "- There are 3 doors: Door 1, Door 2, and Door 3.\n",
    "- Behind one of these doors is a Tesla Cybertruck (let's say it's behind Door 1 for this example).\n",
    "- The other two doors each have a goat (Door 2 and Door 3).\n",
    "\n",
    "- If you initially picked Door 1, and the Cybertruck was indeed behind Door 1, you win the Cybertruck if you do not switch.\n",
    "- If you had picked one of the other two doors (say Door 2 or Door 3), Monty would have revealed the other door with a goat, and you would lose if you did not switch. This is because the probability that you initially chose the Cybertruck does not change based on Monty‚Äôs action."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd394e7488288c5d",
   "metadata": {},
   "source": [
    "## Part 2. Simulation\n",
    "\n",
    "Simulate the problem with Python code by repeating the game 10,000 times with the strategy to ALWAYS switch, and then again 10,000 times with the strategy to NEVER switch. In each case, count the number of Cybertrucks won in 10,000 runs. Based on the results of your simulation, should you switch your guess? How well do your empirical estimates compare to your values obtained analytically in 1?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3908db892590192c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-09-19T02:24:28.905152Z",
     "start_time": "2024-09-19T02:24:28.900017Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tesla is behind door 1\n",
      "You guessed door 2\n",
      "Monty opened door 3\n",
      "Wins when always switching: 6677 out of 10000\n",
      "Winning rate when always switching: 0.6677\n",
      "Wins when never switching: 3315 out of 10000\n",
      "Winning rate when never switching: 0.3315\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "# simulate starting conditions \n",
    "tesla = np.random.randint(1,4) # tesla location\n",
    "guess = np.random.randint(1,4) # your guess\n",
    "\n",
    "# possible doors to open\n",
    "if tesla == 1:\n",
    "    possible_doors = np.setdiff1d([2,3], guess)    \n",
    "elif tesla == 2:\n",
    "    possible_doors = np.setdiff1d([1,3], guess)\n",
    "else:\n",
    "    possible_doors = np.setdiff1d([1,2], guess)\n",
    "    \n",
    "# Monty's action\n",
    "monty = np.random.choice(possible_doors)\n",
    "\n",
    "print(f'Tesla is behind door {tesla}')\n",
    "print(f'You guessed door {guess}')\n",
    "print(f'Monty opened door {monty}')\n",
    "\n",
    "# simulate your strategy: switch or hold\n",
    "strategy = 0 # set to 0 if you want to always hold\n",
    "             # set to 1 if you want to always switch\n",
    "             \n",
    "## HERE IS WHERE YOU INSERT THE CODE THAT DETERMINES WHETHER YOU WIN THE CYBERTRUCK OR THE GOAT ##\n",
    "# Solution code \n",
    "# Function to simulate the Monty Hall game\n",
    "def Monty_game(strategy, num_simul):\n",
    "    wins = 0\n",
    "    for _ in range(num_simul):\n",
    "        # Randomly place the Tesla Cybertruck\n",
    "        tesla = np.random.randint(1,4) # tesla location\n",
    "        guess = np.random.randint(1,4) # your guess\n",
    "        # Determine possible doors Monty can open\n",
    "        possible_doors = [door for door in [1, 2, 3] if door != guess and door != tesla]\n",
    "        # Monty opens one of the remaining doors with a goat\n",
    "        monty = np.random.choice(possible_doors)\n",
    "        \n",
    "        # Determine the door to switch to if switching\n",
    "        if strategy == 1:  # Switch strategy\n",
    "            # The remaining unopened door\n",
    "            remaining_doors = [door for door in [1, 2, 3] if door != guess and door != monty]\n",
    "            switch_guess = remaining_doors[0]\n",
    "            if switch_guess == tesla:\n",
    "                wins += 1\n",
    "        else:  # Hold strategy\n",
    "            if guess == tesla:\n",
    "                wins += 1\n",
    "                \n",
    "    return wins\n",
    "\n",
    "# Number of simulations\n",
    "num_simul= 10000\n",
    "\n",
    "# Simulate the strategy to always switch\n",
    "switch_wins = Monty_game(strategy=1, num_simul = num_simul)\n",
    "switch_win_rates = switch_wins / num_simul\n",
    "\n",
    "# Simulate the strategy to never switch\n",
    "hold_wins = Monty_game(strategy=0, num_simul=num_simul)\n",
    "hold_win_rates = hold_wins / num_simul\n",
    "\n",
    "print(f'Wins when always switching: {switch_wins} out of {num_simul}')\n",
    "print(f'Winning rate when always switching: {switch_win_rates:.4f}')\n",
    "\n",
    "print(f'Wins when never switching: {hold_wins} out of {num_simul}')\n",
    "print(f'Winning rate when never switching: {hold_win_rates:.4f}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17301c078634055",
   "metadata": {},
   "source": [
    "## Deliverables:\n",
    "\n",
    "Submit an iPython notebook titled \"homework_1_EMPLID.ipynb\" that contains your solutions to the above problems. Make sure to include all relevant code and output in the notebook. \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
